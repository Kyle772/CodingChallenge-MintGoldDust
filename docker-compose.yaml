version: '3.8'
services:
  nginx:
    container_name: nginx
    env_file: ./.env
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./server/nginx/conf.d:/etc/nginx/conf.d
      - ./server/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./server/certbot/conf:/etc/letsencrypt
      - ./server/certbot/www:/var/www/certbot
      - ./web/build:/var/www/kylediggs.com/html
    build:
      context: ./
      dockerfile: Dockerfile
    networks:
      - app-network
    restart:
      always
  certbot:
    container_name: certbot
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./server/certbot/conf:/etc/letsencrypt
      - ./server/certbot/www:/var/www/certbot
    networks:
      - app-network
  mongo-db:
    container_name: mongo
    image: mongo
    env_file: ./server/.env
    environment:
      - MONGO_INITDB_DATABASE=strapi
    ports:
      - "27017:27017"
    volumes:
      - mongodb_container:/data/db
      - ./mongo-express/imports:/imports
    networks:
      - app-network
    restart:
      always
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    depends_on:
      - mongo-db
    ports:
      - "8080:8081"
    volumes:
      - ./mongo-express/collection.js:/lib/routes/collection.js
    env_file: ./server/.env
    networks:
      - app-network
  strapi:
    container_name: strapi
    env_file: ./server/.env
    volumes:
      - ./api/.cache:/srv/app/.cache
      - ./api/extensions:/srv/app/extensions
      - ./api/api:/srv/app/api
      - ./api/config:/srv/app/config
      - ./api/public:/srv/app/public
      - ./api/admin:/srv/app/admin
      - mongodb_container:/usr/src/db
      - strapi-uploads:/usr/src/app/public/uploads
    ports:
      - "1337:1337"
    depends_on:
      - mongo-db
    networks:
      - app-network
    build:
      context: ./api
      dockerfile: Dockerfile    
  web:
    container_name: web
    env_file: ./server/.env
    stdin_open: true
    tty: true
    volumes:
      - ./web/public:/home/web/public
      - ./web/src:/home/web/src
      - ./web/package.json:/home/web/package.json
    ports:
      - "3001:3000"
    build:
      context: ./web
      dockerfile: Dockerfile
    networks:
      - app-network

networks:
    app-network:
       driver: bridge

volumes:
  mongodb_container:
  strapi-uploads:
    